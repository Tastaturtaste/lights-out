import { Button } from "std-widgets.slint";
component Tile inherits Rectangle {
    background: Colors.grey;
    in property <color> light_color;
    callback clicked <=> touch_area.clicked;
    touch_area := TouchArea{}
    inner := Rectangle {
        width: 50%;
        height: 50%;
        background: light-color;
    }
}

export component ButtonField inherits Rectangle{
    in-out property <int> size: 3;
    private property <float> pad_pct: 0.05;
    private property <length> pad_width: pad_pct * self.width;
    private property <length> pad_height: pad_pct * self.height;
    private property <length> button_width: ((1 - (size + 1) * pad_pct) / size) * self.width;
    private property <length> button_height: ((1 - (size + 1) * pad_pct) / size) * self.height;
    callback notify_tile_clicked(int, int) -> [bool];
    private property <int> N: size*size;
    private property <[bool]> lit;
    
    for tile[idx] in N: Tile{
        width: button_width;
        height: button_height;
        x: pad_width + mod(idx, size) * (self.width + pad_width);
        y: pad_height + floor(idx / size) * (self.height + pad_height);
        light-color: lit[idx] ? Colors.cyan : Colors.darkcyan;
        clicked => {
            parent.lit = parent.notify_tile_clicked(mod(idx,size), floor(idx/size)); 
        }
    }
}

export component LightsOut inherits Window {
    preferred-width: 340px;
    preferred-height: 340px;
    button_field := ButtonField {
        background: Colors.black;
    }
    callback notify_tile_clicked <=> button_field.notify_tile_clicked;
    in-out property <int> button_field_size <=> button_field.size;
}